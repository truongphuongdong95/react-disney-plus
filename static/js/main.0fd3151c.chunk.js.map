{"version":3,"sources":["features/counter/counterAPI.js","features/counter/counterSlice.js","features/user/userSlice.js","firebase.js","components/Header.js","features/movie/movieSlice.js","components/ImgSlider.js","components/Movies.js","components/Viewers.js","axios.js","requests.js","components/Footer.js","components/Home.js","components/Detail.js","components/Login.js","components/Series.js","components/Originals.js","components/MovieCinema.js","components/SeriesTV.js","components/DetailSeries.js","components/WatchList.js","components/SearchForm.js","components/Search.js","App.js","app/store.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","userSlice","email","photo","setLogin","setLogout","selectNameLogin","user","selectPhotoLogin","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","storage","Header","userName","useSelector","userPhoto","dispatch","useDispatch","history","useHistory","useEffect","onAuthStateChanged","emai","picture","push","signOut","then","Nav","Logo","src","process","NavMenu","to","UserImg","onClick","LoginContainer","Login","signInWithPopup","result","additionalUserInfo","profile","console","log","styled","nav","img","div","movieSlice","movies","watchList","searchList","setMovies","setWatchList","localStorage","setItem","JSON","stringify","setSearchList","selectMovies","movie","selectSearchList","base_url","ImgSlider","Carousel","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","map","Wrap","media_type","id","backdrop_path","Slider","Movies","props","Container","title","Content","poster_path","Viewers","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchUpcomming","fetchSeriesTV","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearchMovies","Footer","Foot","MenuFooter","ul","Home","get","tempMovies","results","fetchMovies","main","Detail","useParams","useState","setMovie","trailerUrl","setTrailerUrl","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","movieDetail","getDetailMovie","Background","Title","original_title","Controls","PlayButton","TrailerButton","movieTrailer","url","urlParams","URLSearchParams","URL","search","catch","err","handleClickTrailer","AddButton","fire","icon","GroupButton","SubTitle","tagline","release_date","Description","overview","videoId","opts","height","width","playerVars","button","CTA","CTALogoOne","SignUp","CTALogoTwo","p","Series","series","serie","Originals","fetchMovie","MovieCinema","fetchMovieCinema","SeriesTV","fetchTVSeries","DetailSeries","setSeries","fetchDetailSeries","detailSeries","YouTubeContainer","WatchList","watchLists","parse","getItem","SearchForm","searchText","setSearchText","inputSearchChanged","e","preventDefault","target","searchMovies","Form","onSubmit","onChange","placeholder","Search","App","className","path","exact","store","configureStore","reducer","counter","counterReducer","movieReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0fd3151c.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    name:\"\",\r\n    email:\"\",\r\n    photo:\"\",\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers:{\r\n        setLogin: (state, action) => {\r\n            state.name = action.payload.name;\r\n            state.email = action.payload.email;\r\n            state.photo = action.payload.photo;\r\n        },\r\n        setLogout: (state) => {\r\n            state.name = null;\r\n            state.email = null;\r\n            state.photo = null;\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const {setLogin, setLogout} = userSlice.actions;\r\n\r\nexport const selectNameLogin = (state) => state.user.name;\r\n\r\nexport const selectEmailLogin = (state) => state.user.email;\r\n\r\nexport const selectPhotoLogin = (state) => state.user.photo;\r\n\r\nexport default userSlice.reducer;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\nimport \"firebase/compat/storage\";\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyA9BnlX96fMf7XiUVCFRsoQzG8DGERJkeY\",\r\n//   authDomain: \"disneyplus-clone-a33d5.firebaseapp.com\",\r\n//   projectId: \"disneyplus-clone-a33d5\",\r\n//   storageBucket: \"disneyplus-clone-a33d5.appspot.com\",\r\n//   messagingSenderId: \"37918794208\",\r\n//   appId: \"1:37918794208:web:dbe9842dfe1dda522a4b85\",\r\n//   measurementId: \"G-DRVLJKWRWG\",\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBvfhqV_RNG4U_wspqlNkLQGK_ootvEb3U\",\r\n  authDomain: \"netflix-clone-app-fe519.firebaseapp.com\",\r\n  projectId: \"netflix-clone-app-fe519\",\r\n  storageBucket: \"netflix-clone-app-fe519.appspot.com\",\r\n  messagingSenderId: \"535034530617\",\r\n  appId: \"1:535034530617:web:7417a71140728c549bb6e8\",\r\n  measurementId: \"G-292BZ3M4FC\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst storage = firebase.storage();\r\n\r\nexport { auth, provider, storage };\r\nexport default db;","import React, {useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  selectNameLogin,\r\n  selectPhotoLogin,\r\n  setLogin,\r\n  setLogout,\r\n} from \"../features/user/userSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { useHistory,Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const userName = useSelector(selectNameLogin);\r\n  const userPhoto = useSelector(selectPhotoLogin);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        dispatch(\r\n          setLogin({\r\n            name: user.name,\r\n            emai: user.email,\r\n            photo: user.picture,\r\n          })\r\n        );\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider).then((result) => {\r\n      let user = result.additionalUserInfo.profile;\r\n      console.log(user);\r\n      dispatch(\r\n        setLogin({\r\n          name: user.name,\r\n          emai: user.email,\r\n          photo: user.picture,\r\n        })\r\n      );\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  const signOut = () => {\r\n    auth.signOut().then(() => {\r\n      dispatch(setLogout());\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Nav>\r\n      <Logo src={process.env.PUBLIC_URL + '/images/logo.svg'} />\r\n      {!userName ? (\r\n        <LoginContainer>\r\n          <Login onClick={signIn}>Login</Login>\r\n        </LoginContainer>\r\n      ) : (\r\n        <>\r\n          <NavMenu>\r\n            <Link to=\"/react-disney-plus\">\r\n              <img src={process.env.PUBLIC_URL + '/images/home-icon.svg'} />\r\n              <span>Home</span>\r\n            </Link>\r\n\r\n            <Link to=\"/react-disney-plus/search\">\r\n              <img src={process.env.PUBLIC_URL + '/images/search-icon.svg'} />\r\n              <span>Search</span>\r\n            </Link>\r\n\r\n            <Link to=\"/react-disney-plus/watch-list\">\r\n              <img src={process.env.PUBLIC_URL + '/images/watchlist-icon.svg'} />\r\n              <span>Watchlist</span>\r\n            </Link>\r\n            <Link to=\"/react-disney-plus/originals\">\r\n              <img src={process.env.PUBLIC_URL + '/images/original-icon.svg'} />\r\n              <span>Original</span>\r\n            </Link>\r\n            <Link to=\"/react-disney-plus/movie-up-coming\">\r\n              <img src={process.env.PUBLIC_URL + '/images/movie-icon.svg'} />\r\n              <span>Movies</span>\r\n            </Link>\r\n            <Link to=\"/react-disney-plus/series-tv\">\r\n              <img src={process.env.PUBLIC_URL + '/images/series-icon.svg'} />\r\n              <span>Series</span>\r\n            </Link>\r\n          </NavMenu>\r\n          {\r\n            !userPhoto ?  <UserImg onClick={signOut} src=\"http://takesphoto.com/img/user.png\" /> : \r\n            <UserImg onClick={signOut} src={userPhoto} />\r\n          }\r\n         \r\n        </>\r\n      )}\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst Nav = styled.nav`\r\n  height: 70px;\r\n  background: #090b13;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 36px;\r\n  overflow-x: hidden;\r\n`;\r\nconst Logo = styled.img`\r\n  width: 80px;\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  margin-left: 25px;\r\n  align-items: center;\r\n\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 12px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    text-decoration: none;\r\n\r\n    img {\r\n      height: 20px;\r\n    }\r\n    span {\r\n      font-size: 13px;\r\n      letter-spacing: 1.42px;\r\n      position: relative;\r\n\r\n      &::after {\r\n        content: \" \";\r\n        height: 2px;\r\n        background: #fff;\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: -6px;\r\n        opacity: 0;\r\n        transform-origin: left center;\r\n        transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n        transform: scaleX(0);\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      span::after {\r\n        transform: scaleX(1);\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserImg = styled.img`\r\n  width: 48px;\r\n  height: 48px;\r\n  cursor: pointer;\r\n  border-radius: 30px;\r\n`;\r\n\r\nconst Login = styled.div`\r\n  border: 1px solid #f9f9f9;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  letter-spacing: 1.5px;\r\n  text-transform: uppercase;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f9f9f9;\r\n    color: #000;\r\n    border-color: transparent;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    movies:[],\r\n    watchList:[],\r\n    searchList:[],\r\n}\r\n\r\nconst movieSlice = createSlice({\r\n    name: \"movie\",\r\n    initialState,\r\n    reducers:{\r\n        setMovies: (state, action) => {\r\n            state.movies = action.payload;\r\n        },\r\n        setWatchList: (state, action) => {\r\n            state.watchList = [...state.watchList, action.payload];\r\n            localStorage.setItem(\"watchlist\", JSON.stringify(state.watchList));\r\n        },\r\n        setSearchList: (state, action) => {\r\n            state.searchList = action.payload\r\n        },\r\n    }\r\n\r\n})\r\n\r\nexport const {setMovies, setWatchList, setSearchList} = movieSlice.actions;\r\n\r\nexport const selectMovies = (state) => state.movie.movies;\r\nexport const selectWatchList = (state) => state.movie.watchList;\r\nexport const selectSearchList = (state) => state.movie.searchList;\r\n\r\nexport default movieSlice.reducer;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectMovies } from \"../features/movie/movieSlice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction ImgSlider() {\r\n  let settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 2,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n  };\r\n\r\n  const movies = useSelector(selectMovies);\r\n\r\n  return (\r\n    <Carousel {...settings}>\r\n      {movies.map((movie) => (\r\n        <Wrap>\r\n           {movie.media_type == \"movie\" || !movie.media_type   ? (\r\n              <Link to={`/detail/${movie.id}`}>\r\n                <img key={movie.id} src={`${base_url}${movie.backdrop_path}`} />\r\n              </Link>\r\n            ) : (\r\n              <Link to={`/detail-series/${movie.id}`}>\r\n                <img key={movie.id} src={`${base_url}${movie.backdrop_path}`} />\r\n              </Link>\r\n            )}\r\n        </Wrap>\r\n      ))}\r\n      {/* <Wrap>\r\n          <img src=\"/images/slider-badging.jpg\"/>\r\n      </Wrap>\r\n\r\n      <Wrap>\r\n          <img src=\"/images/slider-badag.jpg\"/>\r\n      </Wrap> */}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default ImgSlider;\r\n\r\nconst Carousel = styled(Slider)`\r\n  margin-top: 20px;\r\n  .slick-list {\r\n    overflow: visible;\r\n  }\r\n\r\n  li.slick-active button:before {\r\n    color: white;\r\n  }\r\n\r\n  ul li button {\r\n    &::before {\r\n      font-size: 10px;\r\n      color: rgb(150, 158, 171);\r\n    }\r\n  }\r\n\r\n  button {\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  cursor: pointer;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 4px;\r\n    box-shadow: rgb(0 0 0 . 69%) 0px 26px 30px -10px,\r\n      rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n    border: 4px solid transparent;\r\n\r\n    &:hover {\r\n      border: 4px solid #fff;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectMovies } from \"../features/movie/movieSlice\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Movies(props) {\r\n  const movies = useSelector(selectMovies);\r\n  console.log(movies);\r\n\r\n  return (\r\n    <Container>\r\n      <h4>{props.title}</h4>\r\n      <Content>\r\n        {movies.map((movie) => (\r\n          <Wrap>\r\n            {movie.media_type == \"movie\" || !movie.media_type   ? (\r\n              <Link to={`/detail/${movie.id}`}>\r\n                <img key={movie.id} src={`${base_url}${movie.poster_path}`} />\r\n              </Link>\r\n            ) : (\r\n              <Link to={`/detail-series/${movie.id}`}>\r\n                <img key={movie.id} src={`${base_url}${movie.poster_path}`} />\r\n              </Link>\r\n            )}\r\n          </Wrap>\r\n        ))}\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-gap: 25px;\r\n  grid-template-columns: repeat(4, minmax(0, 1fr));\r\n  margin-bottom: 60px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  border: 3px solid rgba(249, 249, 249, 0.1);\r\n  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\r\n    rgb(0 0 0 /73%) 0px 16px 10px -10px;\r\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\r\n      rgb(0 0 0 /72%) 0px 30px 22px -10px;\r\n    transform: scale(1.05);\r\n    border-color: rgba(249, 249, 249, 0.8);\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nfunction Viewers() {\r\n    return (\r\n        <Container>\r\n            <Wrap>\r\n                <img src={process.env.PUBLIC_URL + '/images/viewers-disney.png'} />\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src={process.env.PUBLIC_URL + '/images/viewers-pixar.png'} />\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src={process.env.PUBLIC_URL + '/images/viewers-marvel.png'} />\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src={process.env.PUBLIC_URL + '/images/viewers-starwars.png'} />\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src={process.env.PUBLIC_URL + '/images/viewers-national.png'} />\r\n            </Wrap>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Viewers\r\n\r\nconst Container = styled.div`\r\n    margin-top: 30px;\r\n    display: grid;\r\n    padding: 30px 0 26px;\r\n    grid-gap: 25px;\r\n    grid-template-columns: repeat(5, minmax(0, 1fr));\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n    border: 3px solid rgba( 249, 249, 249, 0.1);\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px, rgb(0 0 0 /73%) 0px 16px 10px -10px;\r\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n\r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    &:hover{\r\n        box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px, rgb(0 0 0 /72%) 0px 30px 22px -10px;\r\n        transform: scale(1.05);\r\n        border-color: rgba(249, 249, 249, 0.8);\r\n    }\r\n`;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n})\r\n\r\nexport default instance;","const API_KEY = \"7f09ec5f5fa9e76babfdaa99c7c75fbc\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchUpcomming:`/movie/upcoming?api_key=${API_KEY}&language=en-US`,\r\n    fetchSeriesTV:`/tv/popular?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchSearchMovies: `/search/multi?api_key=${API_KEY}`,\r\n}\r\n\r\nexport default requests;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Foot>\r\n      <MenuFooter>\r\n        <li>\r\n          <img src={process.env.PUBLIC_URL + '/images/home-icon.svg'} />\r\n          <Link to=\"/react-disney-plus\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <img src={process.env.PUBLIC_URL + '/images/search-icon.svg'} />\r\n          <Link to=\"/react-disney-plus/search\">Search</Link>\r\n        </li>\r\n        <li>\r\n          <img src={process.env.PUBLIC_URL + '/images/watchlist-icon.svg'} />\r\n          <Link to=\"/react-disney-plus/watch-list\">WatchList</Link>\r\n        </li>\r\n        <li>\r\n          <img src={process.env.PUBLIC_URL + '/images/original-icon.svg'} />\r\n          <Link to=\"/react-disney-plus/originals\">Originals</Link>\r\n        </li>\r\n      </MenuFooter>\r\n    </Foot>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\nconst Foot = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 10px;\r\n  background: #545454c4;\r\n  background-color: #59595980;\r\n  backdrop-filter: blur(5px);\r\n  position: fixed;\r\n  left: 50%;\r\n  bottom: -1.6rem;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst MenuFooter = styled.ul`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 5px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-right: 35px;\r\n  }\r\n\r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n\r\n    &:hover {\r\n      box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\r\n        rgb(0 0 0 /72%) 0px 30px 22px -10px;\r\n      transform: scale(1.5);\r\n    }\r\n\r\n    a {\r\n      color: #fff;\r\n      text-decoration: none;\r\n    }\r\n\r\n    img {\r\n      height: 20px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ImgSlider from \"./ImgSlider\";\r\nimport Movies from \"./Movies\";\r\nimport Viewers from \"./Viewers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMovies } from \"../features/movie/movieSlice\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function fetchMovies() {\r\n      let tempMovies = await axios.get(requests.fetchTrending);\r\n\r\n      dispatch(setMovies(tempMovies.data.results));\r\n    }\r\n    fetchMovies();\r\n    //\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <ImgSlider />\r\n      <Viewers />\r\n      <Movies title=\"Recommended For You\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst Container = styled.main`\r\n  min-height: calc(100vh - 70px);\r\n  padding: 0 calc(3.5vw + 5px);\r\n  position: relative;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n\r\n  &::before {\r\n    background: url(\"/images/home-background.png\") center center / cover\r\n      no-repeat fixed;\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"../axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setWatchList } from \"../features/movie/movieSlice\";\r\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction Detail() {\r\n  const { id } = useParams();\r\n\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const API_KEY = \"7f09ec5f5fa9e76babfdaa99c7c75fbc\";\r\n\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getDetailMovie() {\r\n      let movieDetail = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\r\n      setMovie(movieDetail.data);\r\n    }\r\n    getDetailMovie();\r\n  }, [id]);\r\n\r\n  //console.log(movie)\r\n\r\n  const addWatchList = () => {\r\n    dispatch(setWatchList(movie));\r\n\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"Add watch list successfully\",\r\n    });\r\n  };\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClickTrailer = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(`${movie?.title}` || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  console.log(`${movie.title} trailer offical`);\r\n\r\n  return (\r\n    <Container>\r\n      <Background>\r\n        <img src={`${base_url}${movie.backdrop_path}`} />\r\n      </Background>\r\n      <Title>\r\n        <h1>{movie.original_title}</h1>\r\n      </Title>\r\n      <Controls>\r\n        <PlayButton>\r\n          <img src={process.env.PUBLIC_URL + '/images/play-icon-black.png'} />\r\n          <span>Play</span>\r\n        </PlayButton>\r\n        <TrailerButton onClick={() => handleClickTrailer(movie)}>\r\n          <img src={process.env.PUBLIC_URL + '/images/play-icon-white.png'} />\r\n          <span>Trailer</span>\r\n        </TrailerButton>\r\n        <AddButton onClick={addWatchList}>\r\n          <span>+</span>\r\n        </AddButton>\r\n        <GroupButton>\r\n          <img src={process.env.PUBLIC_URL + '/images/group-icon.png'} />\r\n        </GroupButton>\r\n      </Controls>\r\n      <SubTitle>\r\n        Tag: {movie.tagline} - Release: {movie.release_date}\r\n      </SubTitle>\r\n      <Description>{movie.overview}</Description>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n\r\nconst Container = styled.div`\r\n  min-height: calc(100vh -70px);\r\n  padding: 0 calc(3.5vw + 5px);\r\n  position: relative;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  opacity: 0.8;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  height: 16vh;\r\n  min-height: 120px;\r\n  width: 60vw;\r\n  min-width: 200px;\r\n  margin-top: 10px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 45px;\r\n    line-height: 50px;\r\n  }\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlayButton = styled.button`\r\n  border-radius: 4px;\r\n  padding: 0px 24px;\r\n  margin-right: 22px;\r\n  font-size: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 56px;\r\n  background: rgb(249, 249, 249);\r\n  border: none;\r\n  letter-spacing: 1.8px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: rgb(198, 198, 198);\r\n  }\r\n`;\r\n\r\nconst TrailerButton = styled(PlayButton)`\r\n  background: rgb(0, 0, 0, 0.3);\r\n  border: 1px solid rgb(249, 249, 249);\r\n  color: rgb(249, 249, 249);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  margin-right: 16px;\r\n  width: 44px;\r\n  height: 44px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  border: 2px solid #fff;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  cursor: pointer;\r\n\r\n  span {\r\n    font-size: 30px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst GroupButton = styled(AddButton)`\r\n  background: rgba(0, 0, 0);\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  color: rgb(249, 249, 249);\r\n  font-size: 15px;\r\n  min-height: 20px;\r\n  margin-top: 26px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  color: rgb(249, 249, 249);\r\n  line-height: 1.4;\r\n  font-size: 20px;\r\n  margin-top: 16px;\r\n  max-width: 700px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nfunction Login() {\r\n  return (\r\n    <Container>\r\n      <CTA>\r\n        <CTALogoOne src=\"/images/cta-logo-one.svg\" />\r\n        <SignUp>GET ALL THERE</SignUp>\r\n        <Description>\r\n          Lorem Ipsum has been the industry's standard dummy text ever since the\r\n          1500s, when an unknown printer took a galley of type and scrambled it\r\n          to make a type specimen book.\r\n        </Description>\r\n        <CTALogoTwo src=\"/images/cta-logo-two.png\" />\r\n      </CTA>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: calc(100vh - 70px);\r\n  display: flex;\r\n  align-items: top;\r\n  justify-content: center;\r\n\r\n  &::before {\r\n    position: absolute;\r\n    content: \"\";\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-image: url(\"/images/login-background.jpg\");\r\n    background-position: top;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    z-index: -1;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst CTA = styled.div`\r\n  max-width: 650px;\r\n  padding: 80px 40px;\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 100px;\r\n  align-items: center;\r\n`;\r\n\r\nconst CTALogoOne = styled.img``;\r\n\r\nconst CTALogoTwo = styled.img`\r\n  width: 90%;\r\n`;\r\n\r\nconst SignUp = styled.a`\r\n  width: 100%;\r\n  background-color: #0063e5;\r\n  font-weight: bold;\r\n  padding: 17px 0;\r\n  color: #f9f9f9;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  transition: all 250ms;\r\n  letter-spacing: 1.5px;\r\n  margin-top: 8px;\r\n  margin-bottom: 12px;\r\n\r\n  &:hover {\r\n    background: #0483ee;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 11px;\r\n  letter-spacing: 1.5px;\r\n  text-align: center;\r\n  line-height: 1.5;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { selectMovies } from \"../features/movie/movieSlice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Series(props) {\r\n\r\n    const series = useSelector(selectMovies);\r\n\r\n  return (\r\n    <Container>\r\n      <h4>{props.title}</h4>\r\n      <Content>\r\n        {series.map((serie) => (\r\n          <Wrap>\r\n            <Link to={`/detail-series/${serie.id}`}>\r\n              <img key={serie.id} src={`${base_url}${serie.poster_path}`} />\r\n            </Link>\r\n          </Wrap>\r\n        ))}\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Series;\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-gap: 25px;\r\n  grid-template-columns: repeat(4, minmax(0, 1fr));\r\n  margin-bottom: 60px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  border: 3px solid rgba(249, 249, 249, 0.1);\r\n  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\r\n    rgb(0 0 0 /73%) 0px 16px 10px -10px;\r\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\r\n      rgb(0 0 0 /72%) 0px 30px 22px -10px;\r\n    transform: scale(1.05);\r\n    border-color: rgba(249, 249, 249, 0.8);\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport Movies from './Movies'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport axios from '../axios';\r\nimport requests from '../requests';\r\nimport { setMovies } from '../features/movie/movieSlice';\r\nimport Series from './Series';\r\n\r\nfunction Originals() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        async function fetchMovie(){\r\n            let movies = await axios.get(requests.fetchNetflixOriginals);\r\n            //console.log(movies.data.results);\r\n            dispatch(setMovies(movies.data.results));\r\n        }\r\n        fetchMovie();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Series title=\"Originals Disney\" />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Originals\r\n\r\n\r\n\r\nconst Container = styled.main `\r\n    min-height: calc(100vh - 70px);\r\n    padding: 0 calc(3.5vw + 5px);\r\n    position: relative;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n\r\n    &::before{\r\n        background: url(\"/images/home-background.png\") center center / cover no-repeat fixed;\r\n        content: \"\";\r\n        position: absolute;\r\n        top:0;\r\n        left:0;\r\n        right:0;\r\n        bottom:0;\r\n        z-index: -1;\r\n    }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Movies from \"./Movies\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport { setMovies } from \"../features/movie/movieSlice\";\r\n\r\nfunction MovieCinema() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchMovieCinema = async () => {\r\n      let movies = await axios.get(requests.fetchUpcomming);\r\n\r\n      dispatch(setMovies(movies.data.results));\r\n    };\r\n\r\n    fetchMovieCinema();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Movies title=\"Movies Up Coming\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MovieCinema;\r\n\r\nconst Container = styled.main`\r\n  min-height: calc(100vh - 70px);\r\n  padding: 0 calc(3.5vw + 5px);\r\n  position: relative;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n\r\n  &::before {\r\n    background: url(\"/images/home-background.png\") center center / cover\r\n      no-repeat fixed;\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\n","import React,{useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport { setMovies } from \"../features/movie/movieSlice\";\r\nimport Series from './Series';\r\n\r\nfunction SeriesTV() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchTVSeries = async () => {\r\n      let series = await axios.get(requests.fetchSeriesTV);\r\n      console.log(series);\r\n      dispatch(setMovies(series.data.results));\r\n    };\r\n    fetchTVSeries();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Series title=\"Tivi Series\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SeriesTV;\r\n\r\nconst Container = styled.main`\r\n  min-height: calc(100vh - 70px);\r\n  padding: 0 calc(3.5vw + 5px);\r\n  position: relative;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n\r\n  &::before {\r\n    background: url(\"/images/home-background.png\") center center / cover\r\n      no-repeat fixed;\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\n","import axios from \"../axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setWatchList } from \"../features/movie/movieSlice\";\r\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction DetailSeries() {\r\n  const { id } = useParams();\r\n\r\n  const [series, setSeries] = useState([]);\r\n\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const API_KEY = \"7f09ec5f5fa9e76babfdaa99c7c75fbc\";\r\n\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchDetailSeries = async () => {\r\n      let detailSeries = await axios.get(`/tv/${id}?api_key=${API_KEY}`);\r\n      setSeries(detailSeries.data);\r\n    };\r\n    fetchDetailSeries();\r\n  }, [id]);\r\n\r\n  //console.log(series)\r\n\r\n  const addWatchList = () => {\r\n    dispatch(setWatchList(series));\r\n\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: \"Add watch list successfully\",\r\n    });\r\n  };\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClickTrailer = (series) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(series.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  console.log(series);\r\n\r\n  return (\r\n    <Container>\r\n      <Background>\r\n        <img src={`${base_url}${series.backdrop_path}`} />\r\n      </Background>\r\n      <Title>\r\n        <h1>{series.name}</h1>\r\n      </Title>\r\n      <Controls>\r\n        <PlayButton>\r\n          <img src={process.env.PUBLIC_URL + '/images/play-icon-black.png'} />\r\n          <span>Play</span>\r\n        </PlayButton>\r\n        <TrailerButton onClick={() => handleClickTrailer(series)}>\r\n          <img src={process.env.PUBLIC_URL + '/images/play-icon-white.png'} />\r\n          <span>Trailer</span>\r\n        </TrailerButton>\r\n        <AddButton onClick={addWatchList}>\r\n          <span>+</span>\r\n        </AddButton>\r\n        <GroupButton>\r\n          <img src={process.env.PUBLIC_URL + '/images/group-icon.png'} />\r\n        </GroupButton>\r\n      </Controls>\r\n      <SubTitle>\r\n        Tag: {series.tagline} - Release: {series.release_date}\r\n      </SubTitle>\r\n      <Description>{series.overview}</Description>\r\n      <YouTubeContainer>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </YouTubeContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DetailSeries;\r\n\r\nconst Container = styled.div`\r\n  min-height: calc(100vh -70px);\r\n  padding: 0 calc(3.5vw + 5px);\r\n  position: relative;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  opacity: 0.8;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  height: 16vh;\r\n  min-height: 120px;\r\n  width: 60vw;\r\n  min-width: 200px;\r\n  margin-top: 10px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 45px;\r\n    line-height: 50px;\r\n  }\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlayButton = styled.button`\r\n  border-radius: 4px;\r\n  padding: 0px 24px;\r\n  margin-right: 22px;\r\n  font-size: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 56px;\r\n  background: rgb(249, 249, 249);\r\n  border: none;\r\n  letter-spacing: 1.8px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: rgb(198, 198, 198);\r\n  }\r\n`;\r\n\r\nconst TrailerButton = styled(PlayButton)`\r\n  background: rgb(0, 0, 0, 0.3);\r\n  border: 1px solid rgb(249, 249, 249);\r\n  color: rgb(249, 249, 249);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  margin-right: 16px;\r\n  width: 44px;\r\n  height: 44px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  border: 2px solid #fff;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  cursor: pointer;\r\n\r\n  span {\r\n    font-size: 30px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst GroupButton = styled(AddButton)`\r\n  background: rgba(0, 0, 0);\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  color: rgb(249, 249, 249);\r\n  font-size: 15px;\r\n  min-height: 20px;\r\n  margin-top: 26px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  color: rgb(249, 249, 249);\r\n  line-height: 1.4;\r\n  font-size: 20px;\r\n  margin-top: 16px;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst YouTubeContainer = styled.div`\r\n  margin-bottom: 50px;\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Movies from './Movies';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { selectWatchList } from './../features/movie/movieSlice';\r\nimport { setMovies, setWatchList } from '../features/movie/movieSlice';\r\n\r\nfunction WatchList() {\r\n\r\n    const dispatch = useDispatch();\r\n    //const WatchLists = useSelector(selectWatchList);\r\n\r\n    useEffect(() => {\r\n        let watchLists = JSON.parse(localStorage.getItem(\"watchlist\"));\r\n       dispatch(setMovies(watchLists));\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Movies title=\"My Watch List\" />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WatchList\r\n\r\n\r\nconst Container = styled.main `\r\n    min-height: calc(100vh - 70px);\r\n    padding: 0 calc(3.5vw + 5px);\r\n    position: relative;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n\r\n    &::before{\r\n        background: url(\"/images/home-background.png\") center center / cover no-repeat fixed;\r\n        content: \"\";\r\n        position: absolute;\r\n        top:0;\r\n        left:0;\r\n        right:0;\r\n        bottom:0;\r\n        z-index: -1;\r\n    }\r\n`;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport { setSearchList } from \"../features/movie/movieSlice\";\r\n\r\nfunction SearchForm() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  //console.log(searchText)\r\n\r\n  const inputSearchChanged = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    setSearchText(e.target.value);\r\n\r\n    let searchMovies = await axios(\r\n      requests.fetchSearchMovies+`&query=${searchText}`\r\n    );\r\n    //console.log(searchMovies.data.results);\r\n\r\n    dispatch(setSearchList(searchMovies.data.results))\r\n  };\r\n\r\n  const getSearch = async () => {};\r\n\r\n  return (\r\n    <Form>\r\n      <form onSubmit={inputSearchChanged}>\r\n        <input\r\n          onChange={inputSearchChanged}\r\n          value={searchText}\r\n          placeholder=\"Search movies...\"\r\n        />\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n\r\nconst Form = styled.div`\r\n  display: block;\r\n  margin: 10px auto;\r\n\r\n  input {\r\n    display: block;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    height: 50px;\r\n    border-radius: 50px;\r\n    background: transparent;\r\n    border: 1px solid #fff;\r\n    color: #fff;\r\n    font-size: 1.5em;\r\n    padding: 0 10px;\r\n\r\n    ::placeholder {\r\n      color: #fff;\r\n      font-size: 1em;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { selectSearchList, setMovies } from '../features/movie/movieSlice';\r\nimport Movies from './Movies';\r\nimport SearchForm from './SearchForm';\r\n\r\nfunction Search() {\r\n\r\n    const searchList = useSelector(selectSearchList);\r\n\r\n    //console.log(searchList)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setMovies(searchList));\r\n        \r\n    }, [searchList])\r\n\r\n    return (\r\n        <Container>\r\n            <SearchForm />\r\n            <Movies title=\"Search Results:\"/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Search\r\n\r\nconst Container = styled.main `\r\n    min-height: calc(100vh - 70px);\r\n    padding: 0 calc(3.5vw + 5px);\r\n    position: relative;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n\r\n    &::before{\r\n        background: url(\"/images/home-background.png\") center center / cover no-repeat fixed;\r\n        content: \"\";\r\n        position: absolute;\r\n        top:0;\r\n        left:0;\r\n        right:0;\r\n        bottom:0;\r\n        z-index: -1;\r\n    }\r\n`;","import React from \"react\";\nimport { Counter } from \"./features/counter/Counter\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Detail from \"./components/Detail\";\nimport Login from \"./components/Login\";\nimport Originals from \"./components/Originals\";\nimport MovieCinema from \"./components/MovieCinema\";\nimport SeriesTV from \"./components/SeriesTV\";\nimport DetailSeries from \"./components/DetailSeries\";\nimport WatchList from \"./components/WatchList\";\nimport Search from \"./components/Search\";\nimport Footer from \"./components/Footer\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/react-disney-plus/login\">\n            <Login />\n          </Route>\n\n          <Route path=\"/react-disney-plus/detail/:id\">\n            <Detail />\n          </Route>\n\n          <Route path=\"/react-disney-plus/detail-series/:id\">\n            <DetailSeries />\n          </Route>\n\n          <Route path=\"/react-disney-plus/series-tv\">\n            <SeriesTV />\n          </Route>\n\n          <Route path=\"/react-disney-plus/movie-up-coming\">\n            <MovieCinema />\n          </Route>\n\n          <Route path=\"/react-disney-plus/originals\">\n            <Originals />\n          </Route>\n\n          <Route exact path=\"/react-disney-plus/watch-list\">\n            <WatchList />\n          </Route>\n\n          <Route exact path=\"/react-disney-plus/search\">\n            <Search />\n          </Route>\n\n          <Route path=\"/react-disney-plus\">\n            <Home />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport userReducer from '../features/user/userSlice';\nimport movieReducer from '../features/movie/movieSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    movie: movieReducer,\n    user: userReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__3bj7g\",\"value\":\"Counter_value__3KrdC\",\"button\":\"Counter_button__3t0Fj\",\"textbox\":\"Counter_textbox__1GtXG\",\"asyncButton\":\"Counter_asyncButton__3IF6r Counter_button__3t0Fj\"};"],"sourceRoot":""}